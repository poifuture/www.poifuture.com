{"version":3,"sources":["webpack:///./src/pages/contact/index.js"],"names":["Index","props","_this","_React$Component","call","this","handleChange","e","_this$setState","setState","target","name","value","handleSubmit","preventDefault","data","form","fetch","method","headers","Content-Type","body","Object","assign","form-name","getAttribute","state","keys","map","key","encodeURIComponent","join","then","navigate","catch","error","alert","isValidated","render","hero","type","title","subtitle","onClick","undefined","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_8__","className","style","display","action","data-netlify","data-netlify-honeypot","onSubmit","hidden","onChange","htmlFor","id","required","React","Component"],"mappings":"mNAUqBA,sBACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MAIFC,aAAe,SAAAC,GAAK,IAAAC,EAClBN,EAAKO,WAALD,EAAA,IAAiBD,EAAEG,OAAOC,MAAOJ,EAAEG,OAAOE,MAA1CJ,KANiBN,EASnBW,aAAe,SAAAN,GACbA,EAAEO,iBACF,IAlBYC,EAkBNC,EAAOT,EAAEG,OACfO,MAAM,IAAK,CACTC,OAAQ,OACRC,QAAS,CAAEC,eAAgB,qCAC3BC,MAtBUN,EAsBEO,OAAAC,OAAA,CACVC,YAAaR,EAAKS,aAAa,SAC5BvB,EAAKwB,OAvBPJ,OAAOK,KAAKZ,GAChBa,IAAI,SAAAC,GAAG,OAAIC,mBAAmBD,GAAO,IAAMC,mBAAmBf,EAAKc,MACnEE,KAAK,QAwBHC,KAAK,kBAAMC,mBAASjB,EAAKS,aAAa,aACtCS,MAAM,SAAAC,GAAK,OAAIC,MAAMD,MAnBxBjC,EAAKwB,MAAQ,CAAEW,aAAa,GAFXnC,4GAwBnBoC,OAAA,WACE,IAAMC,EAAO,CACXC,KAAM,SACNC,MAAO,UACPC,SAAU,wBACVC,aAASC,GAEX,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQT,KAAMA,GACZM,EAAAC,EAAAC,cAAA,WAASE,UAAU,UAAUC,MAAO,CAAEC,QAAS,SAC7CN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,QACEpC,KAAK,UACLO,OAAO,OACPkC,OAAO,mBACPC,eAAa,OACbC,wBAAsB,YACtBC,SAAUlD,KAAKQ,cAGfgC,EAAAC,EAAAC,cAAA,SAAOP,KAAK,SAAS7B,KAAK,YAAYC,MAAM,YAC5CiC,EAAAC,EAAAC,cAAA,OAAKS,QAAM,GACTX,EAAAC,EAAAC,cAAA,oCACuB,IACrBF,EAAAC,EAAAC,cAAA,SAAOpC,KAAK,YAAY8C,SAAUpD,KAAKC,iBAG3CuC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACbJ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,QAAQS,QAAS,QAAlC,aAGAb,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAAA,SACEE,UAAU,QACVT,KAAM,OACN7B,KAAM,OACN8C,SAAUpD,KAAKC,aACfqD,GAAI,OACJC,UAAU,MAIhBf,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACbJ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,QAAQS,QAAS,SAAlC,SAGAb,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAAA,SACEE,UAAU,QACVT,KAAM,QACN7B,KAAM,QACN8C,SAAUpD,KAAKC,aACfqD,GAAI,QACJC,UAAU,MAIhBf,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACbJ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,QAAQS,QAAS,WAAlC,WAGAb,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAAA,YACEE,UAAU,WACVtC,KAAM,UACN8C,SAAUpD,KAAKC,aACfqD,GAAI,UACJC,UAAU,MAIhBf,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,iBAAiBT,KAAK,UAAxC,kBAnGiBqB,IAAMC","file":"component---src-pages-contact-index-js-efca3f1351ef0d4a2d7a.js","sourcesContent":["import React from \"react\"\nimport { navigate } from \"gatsby-link\"\nimport Layout from \"../../components/Layout\"\n\nfunction encode(data) {\n  return Object.keys(data)\n    .map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]))\n    .join(\"&\")\n}\n\nexport default class Index extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { isValidated: false }\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const form = e.target\n    fetch(\"/\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n      body: encode({\n        \"form-name\": form.getAttribute(\"name\"),\n        ...this.state,\n      }),\n    })\n      .then(() => navigate(form.getAttribute(\"action\")))\n      .catch(error => alert(error))\n  }\n\n  render() {\n    const hero = {\n      type: \"screen\",\n      title: \"Contact\",\n      subtitle: \"contact@poifuture.com\",\n      onClick: undefined,\n    }\n    return (\n      <Layout hero={hero}>\n        <section className=\"section\" style={{ display: \"none\" }}>\n          <div className=\"container\">\n            <div className=\"content\">\n              <h1>Contact</h1>\n              <form\n                name=\"contact\"\n                method=\"post\"\n                action=\"/contact/thanks/\"\n                data-netlify=\"true\"\n                data-netlify-honeypot=\"bot-field\"\n                onSubmit={this.handleSubmit}\n              >\n                {/* The `form-name` hidden field is required to support form submissions without JavaScript */}\n                <input type=\"hidden\" name=\"form-name\" value=\"contact\" />\n                <div hidden>\n                  <label>\n                    Donâ€™t fill this out:{\" \"}\n                    <input name=\"bot-field\" onChange={this.handleChange} />\n                  </label>\n                </div>\n                <div className=\"field\">\n                  <label className=\"label\" htmlFor={\"name\"}>\n                    Your name\n                  </label>\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type={\"text\"}\n                      name={\"name\"}\n                      onChange={this.handleChange}\n                      id={\"name\"}\n                      required={true}\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <label className=\"label\" htmlFor={\"email\"}>\n                    Email\n                  </label>\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type={\"email\"}\n                      name={\"email\"}\n                      onChange={this.handleChange}\n                      id={\"email\"}\n                      required={true}\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <label className=\"label\" htmlFor={\"message\"}>\n                    Message\n                  </label>\n                  <div className=\"control\">\n                    <textarea\n                      className=\"textarea\"\n                      name={\"message\"}\n                      onChange={this.handleChange}\n                      id={\"message\"}\n                      required={true}\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <button className=\"button is-link\" type=\"submit\">\n                    Send\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </section>\n      </Layout>\n    )\n  }\n}\n"],"sourceRoot":""}